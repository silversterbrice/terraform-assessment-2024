name: 'Terraform'

on:
  push:
    branches: [ "main" ]

jobs:
  terraform:
    name: 'Terraform'
    env:
      # AWS secrets
      AWS_ACCESS_KEY_ID: ${{ secrets.DEMO_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DEMO_AWS_SECRET_ACCESS_KEY }}

    runs-on: ubuntu-latest
    environment: production

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq  # Install jq for JSON parsing
      
      - name: Grant execute permission to retrieve_cidr.sh
        run: chmod +x files/retrieve_cidr.sh

      # Retrieve CIDR
      - name: Retrieve CIDR
        id: get_cidr
        run: |
          if ./files/retrieve_cidr.sh; then
            CIDR=$(cat cidr.txt)
            echo "::set-output name=cidr::$CIDR"
          else
            echo "::set-output name=cidr::"
          fi

      # Initialize Terraform
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.7.3
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: '.'
          tf_actions_comment: true

  
      # Plan Terraform with or without CIDR depending on availability
      - name: Terraform plan
        run: |
          if [ -n "${{ steps.get_cidr.outputs.cidr }}" ]; then
            terraform plan -var "cidr=${{ steps.get_cidr.outputs.cidr }}"
          else
            terraform plan
          fi